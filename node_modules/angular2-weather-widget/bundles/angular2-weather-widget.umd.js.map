{"version":3,"file":"angular2-weather-widget.umd.js.map","sources":["ng://angular2-weather-widget/lib/config.ts","ng://angular2-weather-widget/lib/angular-weather-widget.service.ts","ng://angular2-weather-widget/lib/angular-weather-widget.component.ts","ng://angular2-weather-widget/lib/angular-weather-widget.module.ts"],"sourcesContent":["export const API = 'https://api.openweathermap.org/data/2.5/weather?';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { API } from './config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularWeatherWidgetService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  getWeatherDetails(isGeoLocation, location, APIKEY) : Observable <any> {\r\n    if(isGeoLocation){\r\n      return this.http.get(`${API}${location}&units=imperial&appid=${APIKEY}`);\r\n    }else{\r\n      return this.http.get(`${API}q=${location}&units=imperial&appid=${APIKEY}`);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AngularWeatherWidgetService } from './angular-weather-widget.service';\r\n@Component({\r\n  selector: 'angular-weather-widget',\r\n  templateUrl: 'angular-weather-widget.component.html',\r\n  styleUrls: ['angular-weather-widget.component.scss']\r\n})\r\nexport class AngularWeatherWidgetComponent implements OnInit {\r\n  @Input() APIKEY: any;\r\n  @Input() height: string = 'auto';\r\n  @Input() width: string = '425px';\r\n  @Input() backgroundColor: string = 'rgb(10 10 111)';\r\n  @Input() isBoxShadow: boolean = true;\r\n  @Input() borderRadius: string = '5px';\r\n  @Input() locationFontSize: string = '40px';\r\n  @Input() locationFontColor: string = '#fff';\r\n  @Input() status: boolean = true;\r\n  @Input() statusFontColor: string = '#fff';\r\n  @Input() statusFontSize: String = '18px';\r\n  @Input() temperature: Boolean = true;\r\n  @Input() tempratureFontColor: string = '#fff';\r\n  @Input() tempratureFontSize: string = '80px';\r\n  @Input() weatherImages: boolean = true;\r\n  @Input() weatherImageWidth: string = '100px';\r\n  @Input() weatherImageHeight: string = '100px';\r\n  @Input() geoLocation: boolean = false;\r\n  @Input() location: any = '';\r\n  @Input() isWind: boolean = true;\r\n  @Input() isHumidity: boolean = true;\r\n  @Input() windFontColor: string = '#fff';\r\n  @Input() windFontSize: string = '20px';\r\n  @Input() humidityFontColor: string = '#fff';\r\n  @Input() humidityFontSize: string = '20px';\r\n  isLoading: boolean = true;\r\n  weatherDetails = {\r\n    location : '',\r\n    weather_descriptions: '',\r\n    temperature: '',\r\n    icon: '',\r\n    wind_speed: '',\r\n    humidity: ''\r\n  };\r\n  constructor(public ws: AngularWeatherWidgetService) { }\r\n\r\n  ngOnInit() {\r\n    this.checkLocation();\r\n  }\r\n\r\n  /**\r\n   *@description Check whether geolocation or manually added location.\r\n   */\r\n\r\n  checkLocation() {\r\n    if (this.geoLocation) {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          var lat = position.coords.latitude;\r\n          var long = position.coords.longitude;\r\n          this.location = `lat=${lat}&lon=${long}`;\r\n          this.getWeather(true);\r\n        }, (error) => {\r\n          console.warn(error.message);\r\n        });\r\n      } else {\r\n        console.warn(`It seems like Geolocation, which is required for this page, is not enabled in your browser.\r\n        Please use a browser which supports it.`);\r\n      }\r\n    } else if (!this.geoLocation && this.location.length < 1) {\r\n      console.warn('Provide  a valid location');\r\n    } else {\r\n      this.getWeather(false);\r\n    }\r\n  }\r\n\r\n  getWeather(isGeoLocation) {\r\n    if (this.APIKEY) {\r\n      this.ws.getWeatherDetails(isGeoLocation,this.location, this.APIKEY).subscribe(response => {\r\n        this.weatherDetails = {\r\n          location : response.name,\r\n          weather_descriptions: response.weather[0].description,\r\n          temperature: response.main.temp,\r\n          icon: `http://openweathermap.org/img/wn/${response.weather[0].icon}@2x.png`,\r\n          wind_speed: response.wind.speed,\r\n          humidity: response.main.humidity\r\n        };\r\n        this.isLoading = false;\r\n      }, err => {\r\n        console.warn(err.error.error.message);\r\n      })\r\n    } else {\r\n      console.warn('Invalid APIKEY');\r\n    }\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { AngularWeatherWidgetComponent } from './angular-weather-widget.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularWeatherWidgetService } from './angular-weather-widget.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [AngularWeatherWidgetComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [AngularWeatherWidgetComponent],\r\n  providers: [AngularWeatherWidgetService]\r\n})\r\nexport class AngularWeatherWidgetModule { }\r\n"],"names":["Injectable","HttpClient","Component","Input","NgModule","CommonModule","HttpClientModule"],"mappings":"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"}
